{"version":3,"sources":["../../../src/components/parser/combiners.js"],"names":["oneOf","combines","combiner","anyOf","allOf","reduce","acc","schema"],"mappings":";;;;;;;AAAA;;AACA;;;;AAMO,MAAMA,KAAe,GAAGC,QAAQ,IAAI;AACzC,QAAMC,QAAQ,GAAG,0BAAcD,QAAd,CAAjB;AACA,SAAO,MAAMC,QAAb;AACD,CAHM;;;;AAIA,MAAMC,KAAe,GAAGF,QAAQ,IAAI,MAAM,0BAAcA,QAAd,CAA1C;;;;AACA,MAAMG,KAAuB,GAAGH,QAAQ,IAAI,MACjDA,QAAQ,CAACI,MAAT,CAAgB,CAACC,GAAD,EAAMC,MAAN,KAAiB,wBAAUD,GAAV,EAAeC,MAAf,CAAjC,CADK","sourcesContent":["import { randomElement } from '../utils';\nimport deepmerge from 'deepmerge';\nimport type { Schema } from 'openapi3-flowtype-definition';\n\nexport type Combiner = (combines: Array<string>) => () => string;\ntype CombinerResolved = (combines: Array<Schema>) => () => Schema;\n\nexport const oneOf: Combiner = combines => {\n  const combiner = randomElement(combines);\n  return () => combiner;\n};\nexport const anyOf: Combiner = combines => () => randomElement(combines);\nexport const allOf: CombinerResolved = combines => () =>\n  combines.reduce((acc, schema) => deepmerge(acc, schema));\n"],"file":"combiners.js"}