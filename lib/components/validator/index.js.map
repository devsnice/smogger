{"version":3,"sources":["../../../src/components/validator/index.js"],"names":["getValidJoiType","type","createSchema","rules","schema","reduce","rule","joiSchema","Joi","name","required","object","checkPathProps","params","parameters","error","validate","details"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIA,MAAMA,eAA4C,GAAIC,IAAD,IAAU;AAC7D,UAAQA,IAAR;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACE,aAAO,QAAP;;AACF;AACE,aAAOA,IAAP;AALJ;AAOD,CARD;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAA6B;AAChD,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACD,MAAD,EAASE,IAAT,KAAkB;AAC5C,UAAML,IAAI,GAAGD,eAAe,CAACM,IAAI,CAACL,IAAL,IAAaK,IAAI,CAACF,MAAL,CAAYH,IAA1B,CAA5B;;AACA,UAAMM,SAAS,GAAGC,aAAIP,IAAJ,GAAlB;;AACAG,IAAAA,MAAM,CAACE,IAAI,CAACG,IAAN,CAAN,GAAoBF,SAApB;;AACA,QAAID,IAAI,CAACI,QAAT,EAAmB;AAAEN,MAAAA,MAAM,CAACE,IAAI,CAACG,IAAN,CAAN,GAAoBF,SAAS,CAACG,QAAV,EAApB;AAA0C;;AAC/D,WAAON,MAAP;AACD,GANc,EAMZ,EANY,CAAf;AAQA,SAAOI,aAAIG,MAAJ,CAAWP,MAAX,CAAP;AACD,CAVD;;AAYO,MAAMQ,cAAyB,GAAG,CAACC,MAAD,EAAS;AAACC,EAAAA;AAAD,CAAT,KAA0B;AACjE,QAAMV,MAAM,GAAGF,YAAY,CAACY,UAAD,CAA3B;;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUP,aAAIQ,QAAJ,CAAaH,MAAb,EAAqBT,MAArB,CAAhB;;AAEA,MAAIW,KAAJ,EAAW;AACT,WAAO;AACLA,MAAAA,KAAK,EAAEA,KAAK,CAACE;AADR,KAAP;AAGD;AACF,CATM","sourcesContent":["import Joi from 'joi';\nimport { Parameter } from \"../../types/Swagger\";\nimport type { Processor } from \"../router\";\nimport type { DataTypes } from \"../../types/Swagger\";\n\nconst getValidJoiType: (type: DataTypes) => string = (type) => {\n  switch (type) {\n    case 'number':\n    case 'integer':\n      return 'number';\n    default:\n      return type;\n  }\n};\n\nconst createSchema = (rules: Array<Parameter>) => {\n  const schema = rules.reduce((schema, rule) => {\n    const type = getValidJoiType(rule.type || rule.schema.type);\n    const joiSchema = Joi[type]();\n    schema[rule.name] = joiSchema;\n    if (rule.required) { schema[rule.name] = joiSchema.required() }\n    return schema;\n  }, {});\n\n  return Joi.object(schema);\n};\n\nexport const checkPathProps: Processor = (params, {parameters}) => {\n  const schema = createSchema(parameters);\n  const {error} = Joi.validate(params, schema);\n\n  if (error) {\n    return {\n      error: error.details\n    };\n  }\n};\n"],"file":"index.js"}