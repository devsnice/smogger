{"version":3,"sources":["../../../src/components/router/index.js"],"names":["dataToResponse","data","ctx","body","JSON","stringify","exposeParams","params","req","method","_matchedRoute","path","model","createMiddleware","router","processors","use","next","matched","length","reduce","processor","Object","assign","listen","paths","port","app","Koa","routes","allowedMethods","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;;;AAIO,MAAMA,cAAkD,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAeA,GAAG,CAACC,IAAJ,GAAWC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAArF;;;;AAEA,MAAMK,YAAoE,GAAGJ,GAAG,IAAI;AACzF,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA,GAAG,EAAE;AAACC,MAAAA;AAAD,KAAd;AAAwBC,IAAAA;AAAxB,MAAyCR,GAA/C;AACA,QAAMS,IAAI,GAAG,8BAAkBD,aAAlB,CAAb;AACA,QAAME,KAAK,GAAG,4BAAeD,IAAf,EAAqBF,MAArB,CAAd;AACA,SAAO;AACLF,IAAAA,MADK;AAELK,IAAAA;AAFK,GAAP;AAID,CARM;;;;AAUA,MAAMC,gBAAkC,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwBD,MAAM,CAACE,GAAP,CAAW,CAACd,GAAD,EAAMe,IAAN,KAAe;AAClG,MAAI,CAACf,GAAG,CAACgB,OAAJ,CAAYC,MAAjB,EAAyB;AAAE,WAAOF,IAAI,EAAX;AAAe;;AAC1C,QAAM;AAACV,IAAAA,MAAD;AAASK,IAAAA;AAAT,MAAkBN,YAAY,CAACJ,GAAD,CAApC;AACA,QAAMD,IAAI,GAAGc,UAAU,CAACK,MAAX,CAAkB,CAACnB,IAAD,EAAOoB,SAAP,KAAqBC,MAAM,CAACC,MAAP,CAActB,IAAd,EAAoBoB,SAAS,CAACd,MAAD,EAASK,KAAT,EAAgBX,IAAhB,CAA7B,CAAvC,EAA4F,EAA5F,CAAb;AACAD,EAAAA,cAAc,CAACC,IAAD,EAAOC,GAAP,CAAd;AACD,CALyE,CAAnE;;;;AAOA,MAAMsB,MAAM,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAqB;AACzC,QAAMC,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACA,QAAMd,MAAM,GAAG,4BAAaW,KAAb,CAAf;AACAE,EAAAA,GAAG,CACAX,GADH,CACOF,MAAM,CAACe,MAAP,EADP,EAEGb,GAFH,CAEOF,MAAM,CAACgB,cAAP,EAFP;AAIAH,EAAAA,GAAG,CAACH,MAAJ,CAAWE,IAAX;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BN,IAAK,EAA5C;AACA,SAAOC,GAAP;AACD,CAVM","sourcesContent":["import Koa from 'koa';\nimport { createRouter } from \"./generate\";\nimport { formatSwaggerPath } from \"../../utils/utils\";\nimport type { Context, RouteParams } from \"../../types/Router\";\nimport type { Method } from \"../../types/Swagger\";\nimport { getMethodModel } from \"../parser\";\n\nexport type Processor = (params: RouteParams, model: Method, data: any) => any;\ntype CreateMiddleware = (router: KoaRouter$Middleware, processors: Array<Processor>) => KoaRouter$Middleware;\nexport const dataToResponse: (data: {}, ctx: Context) => string = (data, ctx) => ctx.body = JSON.stringify(data);\n\nexport const exposeParams: (ctx: Context) => {params: RouteParams, model: Method} = ctx => {\n  const {params, req: {method}, _matchedRoute} = ctx;\n  const path = formatSwaggerPath(_matchedRoute);\n  const model = getMethodModel(path, method);\n  return {\n    params,\n    model\n  };\n};\n\nexport const createMiddleware: CreateMiddleware = (router, processors) => router.use((ctx, next) => {\n  if (!ctx.matched.length) { return next() }\n  const {params, model} = exposeParams(ctx);\n  const data = processors.reduce((data, processor) => Object.assign(data, processor(params, model, data)), {});\n  dataToResponse(data, ctx);\n});\n\nexport const listen = (paths, { port }) => {\n  const app = new Koa();\n  const router = createRouter(paths);\n  app\n    .use(router.routes())\n    .use(router.allowedMethods());\n\n  app.listen(port);\n  console.log(`Mock server working in :${port}`);\n  return app;\n};\n"],"file":"index.js"}